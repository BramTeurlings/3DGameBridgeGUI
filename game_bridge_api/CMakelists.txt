cmake_minimum_required(VERSION 3.23)

project (3DGameBridgeApi VERSION 0.1)
message("3D Game Bridge Version: ${3DGameBridgeApi_VERSION}")

set(CMAKE_DEBUG_POSTFIX d)

add_library(3DGameBridgeApi SHARED
src/gamebridgeapi.h
src/gamebridgeapi.cpp
src/wmicommunication.h
src/wmicommunication.cpp
src/threads.h
src/threads.cpp
)

target_compile_definitions(3DGameBridgeApi PUBLIC GAME_BRIDGE_API_EXPORTS)
set_target_properties(3DGameBridgeApi PROPERTIES LINKER_LANGUAGE CXX)

set_target_properties(3DGameBridgeApi PROPERTIES PUBLIC_HEADER src/gamebridge.h)

install(TARGETS 3DGameBridgeApi
        EXPORT 3DGameBridgeApiTargets
        RUNTIME DESTINATION bin
        LIBRARY DESTINATION lib
        ARCHIVE DESTINATION lib
        PUBLIC_HEADER DESTINATION include)

install(EXPORT 3DGameBridgeApiTargets
		FILE 3DGameBridgeApiTargets.cmake
		DESTINATION lib/cmake/3DGameBridgeApi
)

target_include_directories(3DGameBridgeApi INTERFACE
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>
	$<INSTALL_INTERFACE:include>
)

include(CMakePackageConfigHelpers)
configure_package_config_file(${CMAKE_CURRENT_SOURCE_DIR}/Config.cmake.in
    ${CMAKE_CURRENT_BINARY_DIR}/3DGameBridgeApiConfig.cmake
    INSTALL_DESTINATION lib/cmake/3DGameBridgeApi
)

write_basic_package_version_file(
  "${CMAKE_CURRENT_BINARY_DIR}/3DGameBridgeApiConfigVersion.cmake"
  VERSION "${3DGameBridgeApi_VERSION}"
  COMPATIBILITY AnyNewerVersion
)

install(FILES
  ${CMAKE_CURRENT_BINARY_DIR}/GameBridgeApiConfig.cmake
  ${CMAKE_CURRENT_BINARY_DIR}/GameBridgeConfigApiVersion.cmake
  DESTINATION lib/cmake/3DGameBridgeApi
)
